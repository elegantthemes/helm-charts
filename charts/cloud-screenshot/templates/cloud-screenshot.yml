# Cloud Screenshot Service
apiVersion: v1
kind: Service
metadata:
  name: cloud-screenshot
  namespace: dc-screenshot
spec:
  selector:
    app: cloud-screenshot
  ports:
    - port: 80
      name: http
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-screenshot
  namespace: dc-screenshot
  labels:
    app: cloud-screenshot
spec:
  replicas: {{ .Values.REPLICAS }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: cloud-screenshot
  template:
    metadata:
      labels:
        app: cloud-screenshot
        redis-cluster-client: 'true'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cloud-screenshot
              topologyKey: kubernetes.io/hostname
      hostAliases:
        - ip: '127.0.0.1'
          hostnames:
            - 'cloud-screenshot.dc-screenshot.svc.cluster.local'
      initContainers:
        - name: init
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLOUD_SCREENSHOT_PATH
              value: {{ .Values.INSTALL_PATH | squote }}
            - name: VIRTUAL_HOST
              value: {{ .Values.VIRTUAL_HOST | squote }}
            - name: CLOUD_SCREENSHOT_REPO_URL
              value: {{ .Values.CLOUD_SCREENSHOT_REPO_URL | squote }}
            - name: IMAGE_VERSION
              value: {{ .Values.CLOUD_SCREENSHOT_VERSION | squote }}
            - name: CLOUD_SCREENSHOT_INIT
              value: '1'
            - name: DIVI_VERSION
              value: {{ .Values.DIVI_VERSION | squote }}
            - name: PHP_OPCACHE_FILE_CACHE
              value: {{ ternary "/var/cache/php" "" (eq "production" .Values.WP_ENV) | squote }}
            - name: PHP_OPCACHE_VALIDATE_TIMESTAMPS
              value: {{ ternary "false" "true" (eq "production" .Values.WP_ENV) | squote }}
          image: {{ .Values.CLOUD_SCREENSHOT_IMAGE | squote }}
          command: ['/etc/cont-init.d/init']
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: '2'
              memory: 1G
          volumeMounts:
            - name: wordpress
              mountPath: /srv
            - name: config
              mountPath: /config
              readOnly: true
      containers:
        - name: app
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLOUD_SCREENSHOT_PATH
              value: {{ .Values.INSTALL_PATH | squote }}
            - name: VIRTUAL_HOST
              value: {{ .Values.VIRTUAL_HOST | squote }}
            - name: CLOUD_SCREENSHOT_REPO_URL
              value: {{ .Values.CLOUD_SCREENSHOT_REPO_URL | squote }}
            - name: IMAGE_VERSION
              value: {{ .Values.CLOUD_SCREENSHOT_VERSION | squote }}
            - name: PHP_OPCACHE_FILE_CACHE
              value: {{ ternary "/var/cache/php" "" (eq "production" .Values.WP_ENV) | squote }}
            - name: PHP_OPCACHE_VALIDATE_TIMESTAMPS
              value: {{ ternary "false" "true" (eq "production" .Values.WP_ENV) | squote }}

          image: {{ .Values.CLOUD_SCREENSHOT_IMAGE | squote }}
          livenessProbe:
            exec:
              command:
                - 'bash'
                - '-c'
                - 'SCRIPT_NAME=/healthz'
                - 'SCRIPT_FILENAME={{ .Values.INSTALL_PATH }}/web/healthz.php'
                - 'REQUEST_METHOD=GET'
                - 'cgi-fcgi'
                - '-bind'
                - '-connect'
                - '127.0.0.1:9000'
            periodSeconds: 30
          ports:
            - name: fastcgi
              containerPort: 9000
          readinessProbe:
            exec:
              command:
                - 'bash'
                - '-c'
                - 'SCRIPT_NAME=/healthz'
                - 'SCRIPT_FILENAME={{ .Values.INSTALL_PATH }}/web/healthz.php'
                - 'REQUEST_METHOD=GET'
                - 'cgi-fcgi'
                - '-bind'
                - '-connect'
                - '127.0.0.1:9000'
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: '2'
              memory: 500Mi
          startupProbe:
            exec:
              command:
                - cat
                - {{ .Values.INSTALL_PATH }}/web/healthz.php
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: wordpress
              mountPath: /srv
            - name: config
              mountPath: /config
              readOnly: true

        - name: nginx
          image: 'nginx:1.21.4'
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 30
          ports:
            - name: http
              containerPort: 80
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 600Mi
          volumeMounts:
            - name: wordpress
              mountPath: /srv
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
              subPath: nginx.conf

{{ range $_, $index := untilStep 1 (int .Values.CLOUD_SCREENSHOT_WORKERS) 1 }}
{{ include "screenshot.container.worker" (dict "Values" $.Values "index" $index) }}
{{ end }}

      volumes:
        - name: wordpress
          hostPath:
            path: /srv
            type: DirectoryOrCreate
        - name: config
          secret:
            secretName: secrets
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
