# Cloud Server Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}
  ports:
    - port: {{ .Values.ET_PORT }}
      targetPort: {{ .Values.ET_PORT }}
      name: fastcgi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        redis-cluster-client: 'true'
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - ingress-nginx
              namespaces:
                - ingress-nginx
              topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}
              namespaces:
                - {{ .Release.Namespace }}
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cloud-screenshot
              namespaces:
                - dc-screenshot
              topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Release.Name }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: INSTALL_PATH
              value: {{ .Values.INSTALL_PATH | squote }}
            - name: VIRTUAL_HOST
              value: {{ .Values.VIRTUAL_HOST | squote }}
            - name: PHP_MEMORY_LIMIT
              value: {{ .Values.PHP_MEMORY_LIMIT | squote }}
            - name: PHP_OPCACHE_FILE_CACHE
              value: ""
            - name: PHP_OPCACHE_VALIDATE_TIMESTAMPS
              value: "1"

          image: {{ .Values.ET_IMAGE | squote }}
          livenessProbe:
            exec:
              command:
                - 'bash'
                - '-c'
                - 'SCRIPT_NAME=/healthz'
                - 'SCRIPT_FILENAME={{ .Values.INSTALL_PATH }}/public/healthz.php'
                - 'REQUEST_METHOD=GET'
                - 'cgi-fcgi'
                - '-bind'
                - '-connect'
                - '127.0.0.1:9000'
            periodSeconds: 30
          ports:
            - name: fastcgi
              containerPort: 9000
          readinessProbe:
            exec:
              command:
                - 'bash'
                - '-c'
                - 'SCRIPT_NAME=/healthz'
                - 'SCRIPT_FILENAME={{ .Values.INSTALL_PATH }}/public/healthz.php'
                - 'REQUEST_METHOD=GET'
                - 'cgi-fcgi'
                - '-bind'
                - '-connect'
                - '127.0.0.1:9000'
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 4000m
              memory: 3G
          startupProbe:
            exec:
              command:
                - cat
                - {{ .Values.INSTALL_PATH }}/public/healthz.php
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: wordpress
              mountPath: /srv
      tolerations:
        - key: node.kubernetes.io/disk-pressure
          operator: Exists
        - key: node.kubernetes.io/memory-pressure
          operator: Exists
        - key: node.kubernetes.io/pid-pressure
          operator: Exists
      volumes:
        - name: wordpress
          hostPath:
            path: /srv
            type: DirectoryOrCreate
