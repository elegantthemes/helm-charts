apiVersion: pxc.percona.com/v1-5-0
kind: PerconaXtraDBCluster
metadata:
  name: {{ .Values.cluster_name }}
  labels:
    {{ .Values.label_name }}: {{ .Values.label_value }}
    release: {{ .Values.label_value }}
  finalizers:
    - delete-pxc-pods-in-order
#   - delete-proxysql-pvc
#   - delete-pxc-pvc
#  annotations:
#    kubectl.kubernetes.io/last-applied-configuration: |
#      {"apiVersion":"pxc.percona.com/v1-5-0","kind":"PerconaXtraDBCluster"}
spec:
  secretsName: {{ .Values.secrets_name }}
  sslSecretName: {{ .Values.ssl_secrets_name }}
  sslInternalSecretName: {{ .Values.ssl_internal_secrets_name }}
  vaultSecretName: {{ .Values.vault_secrets_name }}
  allowUnsafeConfigurations: false
  #  pause: false
  updateStrategy: SmartUpdate
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com/versions
    apply: recommended
    schedule: "0 4 * * *"
  pxc:
    size: 3
    image: percona/percona-xtradb-cluster:8.0.19-10.1
#    schedulerName: mycustom-scheduler
#    readinessDelaySec: 15
#    livenessDelaySec: 300
#    forceUnsafeBootstrap: false
    configuration: |
      [sst]
      xbstream-opts=--decompress
      [xtrabackup]
      compress=lz4
#    imagePullSecrets:
#      - name: private-registry-credentials
#    priorityClassName: high-priority
#    annotations:
#      iam.amazonaws.com/role: role-arn
#    labels:
#      rack: rack-22
#    containerSecurityContext:
#      privileged: false
#    podSecurityContext:
#      runAsUser: 1001
#      runAsGroup: 1001
#      supplementalGroups: [1001]
#    serviceAccountName: percona-xtradb-cluster-operator-workload
    resources:
      requests:
        memory: 1G
        cpu: 600m
      limits:
    #   memory: 1G
    #   cpu: "1"
    # nodeSelector:
    #   disktype: ssd
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    #      advanced:
    #        nodeAffinity:
    #          requiredDuringSchedulingIgnoredDuringExecution:
    #            nodeSelectorTerms:
    #            - matchExpressions:
    #              - key: kubernetes.io/e2e-az-name
    #                operator: In
    #                values:
    #                - e2e-az1
    #                - e2e-az2
    #    tolerations:
    #    - key: "node.alpha.kubernetes.io/unreachable"
    #      operator: "Exists"
    #      effect: "NoExecute"
    #      tolerationSeconds: 6000
    podDisruptionBudget:
      maxUnavailable: 1
    #      minAvailable: 0
    volumeSpec:
      #      emptyDir: {}
      #      hostPath:
      #        path: /data
      #        type: Directory
      persistentVolumeClaim:
        storageClassName: {{ .Values.storage_class_name }}
        #        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 6Gi
    gracePeriod: 600
  proxysql:
    enabled: true
    size: 3
    image: percona/percona-xtradb-cluster-operator:1.5.0-proxysql
    labels:
      {{ .Values.label_name }}: {{ .Values.label_value }}
      release: {{ .Values.label_value }}
    #    schedulerName: mycustom-scheduler
    #    imagePullSecrets:
    #      - name: private-registry-credentials
    #    annotations:
    #      iam.amazonaws.com/role: role-arn
    #    labels:
    #      rack: rack-22
    #    serviceType: ClusterIP
    #    schedulerName: "default"
    resources:
      requests:
        memory: 1G
        cpu: 600m
      limits:
        memory: 1G
        cpu: 700m
    #    priorityClassName: high-priority
    #    nodeSelector:
    #      disktype: ssd
    #    sidecarResources:
    #      requests:
    #        memory: 1G
    #        cpu: 500m
    #      limits:
    #        memory: 2G
    #        cpu: 600m
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    #      advanced:
    #        nodeAffinity:
    #          requiredDuringSchedulingIgnoredDuringExecution:
    #            nodeSelectorTerms:
    #            - matchExpressions:
    #              - key: kubernetes.io/e2e-az-name
    #                operator: In
    #                values:
    #                - e2e-az1
    #                - e2e-az2
    #    tolerations:
    #    - key: "node.alpha.kubernetes.io/unreachable"
    #      operator: "Exists"
    #      effect: "NoExecute"
    #      tolerationSeconds: 6000
    volumeSpec:
      #      emptyDir: {}
      #      hostPath:
      #        path: /data
      #        type: Directory
      persistentVolumeClaim:
        storageClassName: {{ .Values.storage_class_name }}
        #        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
    podDisruptionBudget:
      maxUnavailable: 1
    #      minAvailable: 0
    gracePeriod: 30
  pmm:
    enabled: true
    image: percona/percona-xtradb-cluster-operator:1.5.0-pmm
    serverHost: percona-monitoring-server
    serverUser: admin
    resources:
      requests:
        memory: 200M
        cpu: 500m
  backup:
    image: percona/percona-xtradb-cluster-operator:1.5.0-pxc8.0-backup
    serviceAccountName: percona-xtradb-cluster-operator
    #    imagePullSecrets:
    #      - name: private-registry-credentials
    storages:
      do-sfo2:
        type: s3
        labels:
          {{ .Values.label_name }}: {{ .Values.label_value }}
          release: {{ .Values.label_value }}
        #        nodeSelector:
        #          storage: tape
        #          backupWorker: 'True'
        #        resources:
        #          requests:
        #            memory: 1G
        #            cpu: 600m
        #        affinity:
        #          nodeAffinity:
        #            requiredDuringSchedulingIgnoredDuringExecution:
        #              nodeSelectorTerms:
        #              - matchExpressions:
        #                - key: backupWorker
        #                  operator: In
        #                  values:
        #                  - 'True'
        #        tolerations:
        #          - key: "backupWorker"
        #            operator: "Equal"
        #            value: "True"
        #            effect: "NoSchedule"
        #        annotations:
        #          testName: scheduled-backup
        #        labels:
        #          backupWorker: 'True'
        #        schedulerName: 'default-scheduler'
        #        priorityClassName: 'high-priority'
        #        containerSecurityContext:
        #          privileged: true
        s3:
          bucket: {{ .Values.s3_bucket_name }}
          credentialsSecret: {{ .Values.s3_credentials_secret_name }}
          endpointUrl: {{ .Values.s3_endpoint }}
          region: {{ .Values.s3_region }}
      #fs-pvc:
      #  type: filesystem
      #  #        nodeSelector:
      #  #          storage: tape
      #  #          backupWorker: 'True'
      #  #        resources:
      #  #          requests:
      #  #            memory: 1G
      #  #            cpu: 600m
      #  #        affinity:
      #  #          nodeAffinity:
      #  #            requiredDuringSchedulingIgnoredDuringExecution:
      #  #              nodeSelectorTerms:
      #  #              - matchExpressions:
      #  #                - key: backupWorker
      #  #                  operator: In
      #  #                  values:
      #  #                  - 'True'
      #  #        tolerations:
      #  #          - key: "backupWorker"
      #  #            operator: "Equal"
      #  #            value: "True"
      #  #            effect: "NoSchedule"
      #  #        annotations:
      #  #          testName: scheduled-backup
      #  #        labels:
      #  #          backupWorker: 'True'
      #  #        schedulerName: 'default-scheduler'
      #  #        priorityClassName: 'high-priority'
      #  #        containerSecurityContext:
      #  #          privileged: true
      #  #        podSecurityContext:
      #  #          fsGroup: 1001
      #  #          supplementalGroups: [1001, 1002, 1003]
      #  volume:
      #    persistentVolumeClaim:
      #      storageClassName: {{ .Values.storage_class_name }}
      #      accessModes: [ "ReadWriteOnce" ]
      #      resources:
      #        requests:
      #          storage: 5Gi
    schedule:
      - name: "hourly-backup-do"
        schedule: "0 2-22/2 * * *"
        keep: 6
        storageName: do-sfo2
      - name: "daily-backup-do"
        schedule: "0 0 * * *"
        keep: 5
        storageName: do-sfo2
