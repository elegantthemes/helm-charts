apiVersion: pxc.percona.com/v1-3-0
kind: PerconaXtraDBCluster
metadata:
  name: ***REMOVED***
  finalizers:
    - delete-pxc-pods-in-order
#   - delete-proxysql-pvc
#   - delete-pxc-pvc
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"pxc.percona.com/v1-3-0","kind":"PerconaXtraDBCluster"}
spec:
  secretsName: pxc-secrets
  sslSecretName: ***REMOVED***
  sslInternalSecretName: ***REMOVED***-internal
  allowUnsafeConfigurations: false
  #  pause: false
  #  updateStrategy: RollingUpdate
  pxc:
    size: 3
    image: percona/percona-xtradb-cluster-operator:1.3.0-pxc
    #    schedulerName: mycustom-scheduler
    #    readinessDelaySec: 15
    #    livenessDelaySec: 300
    # forceUnsafeBootstrap: true
    configuration: |
      [mysqld]
      wsrep_debug=ON
      wsrep_provider_options="gcache.size=1G; gcache.recover=yes"
    #    imagePullSecrets:
    #      - name: private-registry-credentials
    #    priorityClassName: high-priority
    #    annotations:
    #      iam.amazonaws.com/role: role-arn
    #    labels:
    #      rack: rack-22
    #    containerSecurityContext:
    #      privileged: false
    resources:
      requests:
        memory: 1G
        cpu: 600m
      limits:
    #   memory: 1G
    #   cpu: "1"
    # nodeSelector:
    #   disktype: ssd
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    #      advanced:
    #        nodeAffinity:
    #          requiredDuringSchedulingIgnoredDuringExecution:
    #            nodeSelectorTerms:
    #            - matchExpressions:
    #              - key: kubernetes.io/e2e-az-name
    #                operator: In
    #                values:
    #                - e2e-az1
    #                - e2e-az2
    #    tolerations:
    #    - key: "node.alpha.kubernetes.io/unreachable"
    #      operator: "Exists"
    #      effect: "NoExecute"
    #      tolerationSeconds: 6000
    podDisruptionBudget:
      maxUnavailable: 1
    #      minAvailable: 0
    volumeSpec:
      #      emptyDir: {}
      #      hostPath:
      #        path: /data
      #        type: Directory
      persistentVolumeClaim:
        storageClassName: ***REMOVED***
        #        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
    gracePeriod: 600
  proxysql:
    enabled: true
    size: 3
    image: percona/percona-xtradb-cluster-operator:1.3.0-proxysql
    #    schedulerName: mycustom-scheduler
    #    imagePullSecrets:
    #      - name: private-registry-credentials
    #    annotations:
    #      iam.amazonaws.com/role: role-arn
    #    labels:
    #      rack: rack-22
    #    serviceType: ClusterIP
    #    schedulerName: "default"
    resources:
      requests:
        memory: 1G
        cpu: 600m
    #      limits:
    #        memory: 1G
    #        cpu: 700m
    #    priorityClassName: high-priority
    #    nodeSelector:
    #      disktype: ssd
    #    sidecarResources:
    #      requests:
    #        memory: 1G
    #        cpu: 500m
    #      limits:
    #        memory: 2G
    #        cpu: 600m
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    #      advanced:
    #        nodeAffinity:
    #          requiredDuringSchedulingIgnoredDuringExecution:
    #            nodeSelectorTerms:
    #            - matchExpressions:
    #              - key: kubernetes.io/e2e-az-name
    #                operator: In
    #                values:
    #                - e2e-az1
    #                - e2e-az2
    #    tolerations:
    #    - key: "node.alpha.kubernetes.io/unreachable"
    #      operator: "Exists"
    #      effect: "NoExecute"
    #      tolerationSeconds: 6000
    volumeSpec:
      #      emptyDir: {}
      #      hostPath:
      #        path: /data
      #        type: Directory
      persistentVolumeClaim:
        storageClassName: ***REMOVED***
        #        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
    podDisruptionBudget:
      maxUnavailable: 1
    #      minAvailable: 0
    gracePeriod: 30
  pmm:
    enabled: false
    image: percona/percona-xtradb-cluster-operator:1.3.0-pmm
    serverHost: monitoring-service
    serverUser: pmm
    resources:
      requests:
        memory: 200M
        cpu: 500m
  backup:
    image: percona/percona-xtradb-cluster-operator:1.3.0-backup
    serviceAccountName: percona-xtradb-cluster-operator
    #    imagePullSecrets:
    #      - name: private-registry-credentials
    storages:
      backup-s3:
        type: s3
        #        nodeSelector:
        #          storage: tape
        #          backupWorker: 'True'
        #        resources:
        #          requests:
        #            memory: 1G
        #            cpu: 600m
        #        affinity:
        #          nodeAffinity:
        #            requiredDuringSchedulingIgnoredDuringExecution:
        #              nodeSelectorTerms:
        #              - matchExpressions:
        #                - key: backupWorker
        #                  operator: In
        #                  values:
        #                  - 'True'
        #        tolerations:
        #          - key: "backupWorker"
        #            operator: "Equal"
        #            value: "True"
        #            effect: "NoSchedule"
        #        annotations:
        #          testName: scheduled-backup
        #        labels:
        #          backupWorker: 'True'
        #        schedulerName: 'default-scheduler'
        #        priorityClassName: 'high-priority'
        #        containerSecurityContext:
        #          privileged: true
        s3:
          bucket: {{ .Values.s3_bucket_name }}
          credentialsSecret: {{ .Values.s3_credentials_secret_name }}
          endpointUrl: {{ .Values.s3_endpoint }}
          region: {{ .Values.s3_region }}
      fs-pvc:
        type: filesystem
        #        nodeSelector:
        #          storage: tape
        #          backupWorker: 'True'
        #        resources:
        #          requests:
        #            memory: 1G
        #            cpu: 600m
        #        affinity:
        #          nodeAffinity:
        #            requiredDuringSchedulingIgnoredDuringExecution:
        #              nodeSelectorTerms:
        #              - matchExpressions:
        #                - key: backupWorker
        #                  operator: In
        #                  values:
        #                  - 'True'
        #        tolerations:
        #          - key: "backupWorker"
        #            operator: "Equal"
        #            value: "True"
        #            effect: "NoSchedule"
        #        annotations:
        #          testName: scheduled-backup
        #        labels:
        #          backupWorker: 'True'
        #        schedulerName: 'default-scheduler'
        #        priorityClassName: 'high-priority'
        #        containerSecurityContext:
        #          privileged: true
        #        podSecurityContext:
        #          fsGroup: 1001
        #          supplementalGroups: [1001, 1002, 1003]
        volume:
          persistentVolumeClaim:
            storageClassName: ***REMOVED***
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 5Gi
    schedule:
      - name: "weekly-backup"
        schedule: "0 0 * * 6"
        keep: 3
        storageName: backup-s3
      - name: "daily-backup"
        schedule: "0 0 * * *"
        keep: 5
        storageName: backup-s3
